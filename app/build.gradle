apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.hurist.testapplication"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "tier"
    productFlavors {
        free {
            applicationIdSuffix ".free"
            manifestPlaceholders = [
                    name:"TestAppFree",
            ]
        }
        advance {
            applicationIdSuffix ".pro"
            manifestPlaceholders = [
                    name:"TestAppPro",
            ]
        }
    }


}

ext {
    material_version = '1.3.0-alpha01'
    lifecycle_version = "2.3.0-alpha04"
    room_version = "2.2.5"
    paging_version = "2.1.2"
    kotlin_courtine_version = '1.3.7'
    appcompat_version = '1.1.0'
    fragemt_version = '1.3.0-alpha04'
    activity_version = '1.2.0-alpha04'
    retrofit_version = '2.8.2'
    okhttp_version = '4.7.2'
    converter_gson_version = '2.8.2'
    core_ktx_version = '1.3.0'
    locale_helper_version = '1.0.3'
    smart_refresh_version = '1.1.2'
    gson_versoin = '2.8.6'
    fragment_ktx = '1.3.0-alpha06'
    activity_ktx = '1.2.0-alpha06'
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.fragment:fragment:$fragemt_version"
    implementation "androidx.activity:activity:$activity_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.retrofit2:converter-gson:$converter_gson_version"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${lifecycle_version}"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"
    implementation "androidx.activity:activity-ktx:$activity_ktx"
    //ROOM
    implementation "androidx.room:room-runtime:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    //Paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    //Kotlin Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_courtine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_courtine_version"
    // gson
    implementation "com.google.code.gson:gson:$gson_versoin"
    // refresh and load more
    implementation "com.scwang.smartrefresh:SmartRefreshLayout:$smart_refresh_version"
    // Material Design
    implementation "com.google.android.material:material:$material_version"
    // locale helper url:https://github.com/zeugma-solutions/locale-helper-android
    implementation "com.zeugmasolutions.localehelper:locale-helper-android:$locale_helper_version"
    // Http Log
    implementation('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }

    //Flexbox Layout
    implementation 'com.google.android:flexbox:2.0.1'

    //生物识别
    implementation 'androidx.biometric:biometric:1.0.1'
    //Websocket
    implementation 'com.tinder.scarlet:scarlet:0.1.9'
    //https://github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'
    //https://github.com/permissions-dispatcher/PermissionsDispatcher
    implementation "org.permissionsdispatcher:permissionsdispatcher:4.7.0"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.7.0"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    implementation "androidx.dynamicanimation:dynamicanimation:1.0.0"
    implementation 'com.jakewharton:disklrucache:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.6'
}
